#!/usr/bin/env bash

TMP_FILE="$HOME/.cache/lf/err.png"
CACHE="$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}'))"
WIDTH="$3"
HEIGHT="$2"
# return $(kitty +kitten icat -print-window-size;echo $?)
# TEST=$(kitty +kitten icat --print-window-size)

batorcat() {
	file="$1"
	shift
	if command -v bat >/dev/null 2>&1; then
		# echo "$WIDTH"
		# bat --color=always --style=plain --pager=never "$file" "$@"
		bat --color=always --style=plain --pager=never --terminal-width=$WIDTH "$file" "$@"
	else
		cat "$file"
	fi
}

function check_cache {
	if [ ! -d "$HOME/.cache/lf" ]; then
		mkdir -p "$HOME/.cache/lf"
	fi
}

function hash_filename {
	TMP_FILE="$HOME/.cache/lf/$(echo ${1%.*} | sed -e 's|/|\_|g').$2"
}

function draw_clear {
	kitty +kitten icat --transfer-mode file --clear
}

function draw_image {
	kitty +kitten icat --transfer-mode file --scale-up --place "$2x$3@$4x$5" "$1"
}

function make_video {
	if [ "${TMP_FILE}" -ot "$1" ]; then
		ffmpegthumbnailer -t 0% -q 3 -s 0 \
			-c jpeg -i "$1" -o "${TMP_FILE}"
	fi
}

function make_pdf {
	local DEFAULT_SIZE="1920x1080"
	if [ "${TMP_FILE}" -ot "$1" ]; then
		pdftoppm -png -f 1 -l 1 -jpeg -tiffcompression jpeg \
			-scale-to-x -1 -scale-to-y 1080 \
			-singlefile "$1" "${TMP_FILE%.png}"
	fi
}

check_cache
draw_clear

case "$(printf "%s\n" "$(readlink -f "$1")" | awk '{print tolower($0)}')" in
*.tgz | *.tar.gz) tar tzf "$1" ;;
*.tar.bz2 | *.tbz2) tar tjf "$1" ;;
*.tar.txz | *.txz) xz --list "$1" ;;
*.tar) tar tf "$1" ;;
*.zip | *.jar | *.war | *.ear | *.oxt) unzip -l "$1" ;;
*.rar) unrar l "$1" ;;
*.md) glow -s dark -w "$HEIGHT" "$1" ;;
*.7z) 7z l "$1" ;;
*.[1-8]) man "$1" | col -b ;;
*.o) nm "$1" ;;
*.torrent) transmission-show "$1" ;;
*.iso) iso-info --no-header -l "$1" ;;
*.odt | *.ods | *.odp | *.sxw) odt2txt "$1" ;;
*.doc)
	# catdoc "$1"
	textutil -stdout -cat txt "$1"
	;;
# *.docx) docx2txt "$1" ;;
*.docx)
	hash_filename "$1" "md"
	pandoc -s "$1" -t markdown -o ${TMP_FILE}
	glow -s dark "${TMP_FILE}"
	;;

*.xml | *.html)
	hash_filename "$1" "md"
	pandoc -s "$1" -t markdown -o ${TMP_FILE}
	# glow -s dark "${TMP_FILE}" # Very time consuming
	bat --color=always --style=plain --pager=never --terminal-width=$WIDTH "${TMP_FILE}"
	;;
*.xls | *.xlsx)
	ssconvert --export-type=Gnumeric_stf:stf_csv "$1" "fd://1" | batorcat --language=csv
	;;
*.wav | *.mp3 | *.flac | *.m4a | *.wma | *.ape | *.ac3 | *.og[agx] | *.spx | *.opus | *.as[fx] | *.mka)
	exiftool "$1"
	;;
*.pdf)
	hash_filename "$1" "png"
	make_pdf "$1" "$2" "$3"
	draw_image "${TMP_FILE}" "$2" "$3" "$4" "$5"
	exit 1
	;;

*.avi | *.mp4 | *.wmv | *.dat | *.3gp | *.ogv | *.mkv | *.mpg | *.mpeg | *.vob | *.fl[icv] | *.m2v | *.mov | *.webm | *.ts | *.mts | *.m4v | *.r[am] | *.qt | *.divx)
	hash_filename "$1" "jpg"
	make_video "$1" "$2" "$3"
	draw_image "${TMP_FILE}" "$2" "$3" "$4" "$5"
	exit 1
	;;
*.bmp | *.jpg | *.jpeg | *.png | *.xpm | *.webp | *.gif | *.jfif)
	draw_image "$1" "$2" "$3" "$4" "$5"
	exit 1
	;;
*.svg)
	hash_filename "$1" "jpg"
	if [ "${TMP_FILE}" -ot "$1" ]; then
		rsvg-convert -h 500 "$1" >"${TMP_FILE}"
	fi
	draw_image "${TMP_FILE}" "$2" "$3" "$4" "$5"
	exit 1
	;;
*.ino)
	batorcat --language=cpp "$1"
	;;

# *.epub)
# 	[ ! -f "$CACHE" ] && \
# 		epub-thumbnailer "$1" "$CACHE" 1024
# 	draw_image "$CACHE" "$2" "$3" "$4" "$5"
# 	;;
# *.cbz|*.cbr|*.cbt)
# 	[ ! -f "$CACHE" ] && \
# 		comicthumb "$1" "$CACHE" 1024
# 	draw_image "$CACHE" "$2" "$3" "$4" "$5"
# 	;;

*)
	batorcat "$1"
	;;
esac
exit 0
