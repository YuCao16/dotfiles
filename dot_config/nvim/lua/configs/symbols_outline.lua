local symbol_outline_ok, symbol_outline = pcall(require, "symbols-outline")
if not symbol_outline_ok then
	vim.notify("symbols-outline failed", "error", { render = "minimal" })
	return
end

local opts = {
	highlight_hovered_item = true,
	show_guides = true,
	auto_preview = false,
	position = "right",
	relative_width = true,
	width = 25,
	auto_close = false,
	show_numbers = false,
	show_relative_numbers = false,
	show_symbol_details = true,
	-- preview_bg_highlight = "Pmenu",
	preview_bg_highlight = "NormalFloat",
	autofold_depth = nil,
	auto_unfold_hover = true,
	fold_markers = { "Ôë†", "Ôëº" },
	keymaps = { -- These keymaps can be a string or a table for multiple keys
		close = { "<Esc>", "q" },
		goto_location = "<Cr>",
		focus_location = "o",
		hover_symbol = "<C-space>",
		toggle_preview = "K",
		rename_symbol = "r",
		code_actions = "a",
		fold = "h",
		unfold = "l",
		fold_all = "FW",
		unfold_all = "E",
		fold_reset = "R",
	},
	lsp_blacklist = { "python-lsp-server", "pylsp", "pyright" },
	symbol_blacklist = {},
	symbols = {
		File = { icon = "Ôúì ", hl = "TSURI" },
		Module = { icon = "Ôíá ", hl = "TSNamespace" },
		Namespace = { icon = "Ôô© ", hl = "TSNamespace" },
		Package = { icon = "Ôíá ", hl = "TSNamespace" },
		Class = { icon = "Ô¥Ø ", hl = "TSType" },
		Method = { icon = "∆í ", hl = "TSMethod" },
		Property = { icon = "Óò§ ", hl = "TSMethod" },
		Field = { icon = "Ôöß ", hl = "TSField" },
		Constructor = { icon = "Óàè ", hl = "TSConstructor" },
		Enum = { icon = "‚Ñ∞ ", hl = "TSType" },
		Interface = { icon = "Ô∞Æ ", hl = "TSType" },
		Function = { icon = "ÔÇö ", hl = "TSFunction" },
		Variable = { icon = "Óûõ ", hl = "TSConstant" },
		Constant = { icon = "Óà¨ ", hl = "TSConstant" },
		String = { icon = "ùìê ", hl = "TSString" },
		Number = { icon = "# ", hl = "TSNumber" },
		Boolean = { icon = "‚ä® ", hl = "TSBoolean" },
		Array = { icon = "Ôô© ", hl = "TSConstant" },
		Object = { icon = "‚¶ø ", hl = "TSType" },
		Key = { icon = "Ô†ä ", hl = "TSType" },
		Null = { icon = "NULL ", hl = "TSType" },
		EnumMember = { icon = "ÔÖù ", hl = "TSField" },
		Struct = { icon = "ÔÜ≥ ", hl = "TSType" },
		Event = { icon = "ÔÉß ", hl = "TSType" },
		Operator = { icon = "+ ", hl = "TSOperator" },
		TypeParameter = { icon = "Ôô±ùôè", hl = "TSParameter" },
	},
}
symbol_outline.setup(opts)
-- nnoremap("<leader>sm", "<cmd>SymbolsOutline<CR>", { desc = "Open symbols outline" })
